#-------------------------------------------
# tmp directory for ruby-install

- name: check for tmp directory
  stat:
    path: "{{ tmp_ruby_install_path }}"
  register: result

- name: create temp dir for ruby-install
  become_user: vagrant
  file:
    path: "{{ tmp_ruby_install_path }}"
    state: directory    
  when: result.stat.islnk is not defined

#-------------------------------------------
# get ruby-install package and unlock

- name: check if uncompressed package available
  become_user: vagrant
  stat:
    path: "{{ tmp_ruby_install_path }}/ruby-install-{{ ruby_install_ver }}.tar.gz.asc"
  register: result_uncompressed

- name: if cannot find uncompressed, check if we have compressed package
  become_user: vagrant
  stat:
    path: "{{ tmp_ruby_install_path }}/ruby-install-{{ ruby_install_ver }}.tar.gz"
  register: result_compressed
  when: result_uncompressed is undefined or result_uncompressed.stat.exists == False
  
- name: if we do not have compressed package, download from github
  become_user: vagrant
  get_url:
    url: https://github.com/postmodern/ruby-install/archive/v0.7.0.tar.gz
    dest: "{{ tmp_ruby_install_path }}"
  when: result_compressed is undefined or result_compressed.stat.exists == False
  
#-------------------------------------------
# and prepare and do the actual install  
  
- name: make sure the temporary uncompress directory exist
  file:
    path: "{{ tmp_ruby_install_path }}/ruby-install/"
    state: directory    
  
# TODO: handle the case where this indicates change based on "Cannot stat: No such file..."
- name: uncompress ruby-install
  unarchive:
    src: "{{ tmp_ruby_install_path }}/{{ tmp_ruby_install_pkg }}.tar.gz"
    dest: "{{ tmp_ruby_install_path }}/"

- name: install ruby-install
  shell: "cd {{ tmp_ruby_install_path }}/{{ tmp_ruby_install_pkg }}; make install"
